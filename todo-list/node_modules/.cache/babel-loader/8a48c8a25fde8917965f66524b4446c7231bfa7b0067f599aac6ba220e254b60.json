{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\khoa-front-end-ReactJs\\\\TODO-GEEKUP\\\\todo-list\\\\src\\\\components\\\\Todos\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useMemo } from \"react\";\nimport { Button, Divider, List } from \"antd\";\nimport { message } from \"antd\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./Tasks.scss\";\nimport { getTaskList, updateTaskStatus } from \"../../services/taskService\";\nimport { CheckCircleTwoTone, MinusSquareTwoTone } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tasks(props) {\n  _s();\n  const {\n    currentUser\n  } = props;\n  const [tasks, setTasks] = useState([]);\n  const [loadings, setLoadings] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch danh sách task khi currentUser hoặc loading thay đổi\n  useEffect(() => {\n    const fetchTaskList = async () => {\n      const result = await getTaskList(currentUser);\n      setTasks(result);\n    };\n    fetchTaskList();\n  }, [currentUser, loading]);\n\n  // Sắp xếp danh sách nhiệm vụ theo trạng thái hoàn thành và id\n  const sortedTasks = useMemo(() => {\n    return tasks.sort((a, b) => {\n      if (!a.completed && b.completed) return -1;\n      if (a.completed && !b.completed) return 1;\n      return a.id - b.id;\n    });\n  }, [tasks]);\n\n  // Xử lý khi click vào button Mark done\n  const markDone = async (taskId, index) => {\n    try {\n      const result = await updateTaskStatus(taskId, {\n        completed: true\n      });\n      if (result.id) {\n        setLoadings(prevLoadings => {\n          const newLoadings = [...prevLoadings];\n          newLoadings[index] = true;\n          return newLoadings;\n        });\n        setTimeout(() => {\n          setLoadings(prevLoadings => {\n            const newLoadings = [...prevLoadings];\n            newLoadings[index] = false;\n            return newLoadings;\n          });\n          setLoading(!loading);\n        }, 1000);\n      } else {\n        message.error(\"Error marking task as done\");\n      }\n    } catch (error) {\n      console.error(\"Error marking task as done:\", error);\n    }\n  };\n\n  // Render số lượng task done/tổng số task\n  const renderTaskStatus = () => {\n    const doneCount = tasks.filter(task => task.completed).length;\n    const totalCount = tasks.length;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Done ${doneCount}/${totalCount} tasks `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        plain: true,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"scrollableDiv\",\n        style: {\n          height: 400,\n          overflow: \"auto\",\n          padding: \"0 16px\",\n          border: \"1px solid rgba(140, 140, 140, 0.35)\",\n          borderRadius: \"8px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          dataLength: sortedTasks.length,\n          scrollableTarget: \"scrollableDiv\",\n          children: /*#__PURE__*/_jsxDEV(List, {\n            dataSource: sortedTasks,\n            renderItem: (item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(List.Item, {\n                className: `tasks__item ${item.completed ? \"tasks__item--completed\" : \"\"}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tasks__content\",\n                  children: [item.completed ? /*#__PURE__*/_jsxDEV(CheckCircleTwoTone, {\n                    twoToneColor: \"#52c41a\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(MinusSquareTwoTone, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this), !item.completed && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tasks__manipulate\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"primary\",\n                    loading: loadings[index],\n                    onClick: () => markDone(item.id, index),\n                    children: \"Mark Done\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 23\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tasks.length > 0 && renderTaskStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Tasks, \"rMhSKA02UjF1fw//os5KTeXRSRA=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","useEffect","useMemo","Button","Divider","List","message","InfiniteScroll","getTaskList","updateTaskStatus","CheckCircleTwoTone","MinusSquareTwoTone","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","props","_s","currentUser","tasks","setTasks","loadings","setLoadings","loading","setLoading","fetchTaskList","result","sortedTasks","sort","a","b","completed","id","markDone","taskId","index","prevLoadings","newLoadings","setTimeout","error","console","renderTaskStatus","doneCount","filter","task","length","totalCount","children","fileName","_jsxFileName","lineNumber","columnNumber","className","orientation","plain","style","height","overflow","padding","border","borderRadius","dataLength","scrollableTarget","dataSource","renderItem","item","Item","twoToneColor","title","type","onClick","_c","$RefreshReg$"],"sources":["D:/Workspace/khoa-front-end-ReactJs/TODO-GEEKUP/todo-list/src/components/Todos/Tasks.js"],"sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\r\nimport { Button, Divider, List } from \"antd\";\r\nimport { message } from \"antd\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport \"./Tasks.scss\";\r\nimport { getTaskList, updateTaskStatus } from \"../../services/taskService\";\r\nimport { CheckCircleTwoTone, MinusSquareTwoTone } from \"@ant-design/icons\";\r\n\r\nfunction Tasks(props) {\r\n  const { currentUser } = props;\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loadings, setLoadings] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch danh sách task khi currentUser hoặc loading thay đổi\r\n  useEffect(() => {\r\n    const fetchTaskList = async () => {\r\n      const result = await getTaskList(currentUser);\r\n      setTasks(result);\r\n    };\r\n    fetchTaskList();\r\n  }, [currentUser, loading]);\r\n\r\n  // Sắp xếp danh sách nhiệm vụ theo trạng thái hoàn thành và id\r\n  const sortedTasks = useMemo(() => {\r\n    return tasks.sort((a, b) => {\r\n      if (!a.completed && b.completed) return -1;\r\n      if (a.completed && !b.completed) return 1;\r\n      return a.id - b.id;\r\n    });\r\n  }, [tasks]);\r\n\r\n  // Xử lý khi click vào button Mark done\r\n  const markDone = async (taskId, index) => {\r\n    try {\r\n      const result = await updateTaskStatus(taskId, { completed: true });\r\n      if (result.id) {\r\n        setLoadings((prevLoadings) => {\r\n          const newLoadings = [...prevLoadings];\r\n          newLoadings[index] = true;\r\n          return newLoadings;\r\n        });\r\n        setTimeout(() => {\r\n          setLoadings((prevLoadings) => {\r\n            const newLoadings = [...prevLoadings];\r\n            newLoadings[index] = false;\r\n            return newLoadings;\r\n          });\r\n          setLoading(!loading);\r\n        }, 1000);\r\n      } else {\r\n        message.error(\"Error marking task as done\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error marking task as done:\", error);\r\n    }\r\n  };\r\n\r\n  // Render số lượng task done/tổng số task\r\n  const renderTaskStatus = () => {\r\n    const doneCount = tasks.filter((task) => task.completed).length;\r\n    const totalCount = tasks.length;\r\n    return <p>{`Done ${doneCount}/${totalCount} tasks `}</p>;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"tasks\">\r\n        <Divider orientation=\"left\" plain>\r\n          <h2>Tasks</h2>\r\n        </Divider>\r\n        <div\r\n          id=\"scrollableDiv\"\r\n          style={{\r\n            height: 400,\r\n            overflow: \"auto\",\r\n            padding: \"0 16px\",\r\n            border: \"1px solid rgba(140, 140, 140, 0.35)\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n        >\r\n          <InfiniteScroll\r\n            dataLength={sortedTasks.length}\r\n            scrollableTarget=\"scrollableDiv\"\r\n          >\r\n            <List\r\n              dataSource={sortedTasks}\r\n              renderItem={(item, index) => (\r\n                <>\r\n                  <List.Item\r\n                    key={item.id}\r\n                    className={`tasks__item ${\r\n                      item.completed ? \"tasks__item--completed\" : \"\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"tasks__content\">\r\n                      {item.completed ? (\r\n                        <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\r\n                      ) : (\r\n                        <MinusSquareTwoTone />\r\n                      )}\r\n                      <span>{item.title}</span>\r\n                    </div>\r\n                    {!item.completed && (\r\n                      <div className=\"tasks__manipulate\">\r\n                        <Button\r\n                          type=\"primary\"\r\n                          loading={loadings[index]}\r\n                          onClick={() => markDone(item.id, index)}\r\n                        >\r\n                          Mark Done\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                  </List.Item>\r\n                </>\r\n              )}\r\n            />\r\n          </InfiniteScroll>\r\n        </div>\r\n\r\n        <div>{tasks.length > 0 && renderTaskStatus()}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}